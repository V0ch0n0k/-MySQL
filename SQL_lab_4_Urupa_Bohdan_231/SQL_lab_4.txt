#1. Вивести статистику: загальна кількість всіх книг, їх вартість, їх середню вартість, мінімальну і максимальну ціну
SELECT 
	COUNT(*) AS total_books,
    SUM(`price_`) AS total_price,
    AVG(`price_`) AS average_price,
    MIN(`price_`) AS min_price,
    MAX(`price_`) AS max_price
FROM `booktable`;

#2. Вивести загальну кількість всіх книг без урахування книг з непроставленою ціною
SELECT COUNT(*) AS total_books FROM `booktable` WHERE `price_` IS NOT NULL;

#3. Вивести статистику (див. 1) для книг новинка / не новинка
SELECT 
	COUNT(*) AS total_books,
    `novelty_`,
    SUM(`price_`) AS total_price,
    AVG(`price_`) AS average_price,
    MIN(`price_`) AS min_price,
    MAX(`price_`) AS max_price
FROM `booktable`
GROUP BY `novelty_`;

#4. Вивести статистику (див. 1) для книг за кожним роком видання
SELECT 
	COUNT(*) AS total_books,
    YEAR(`date_`) year_publication,
    SUM(`price_`) AS total_price,
    AVG(`price_`) AS average_price,
    MIN(`price_`) AS min_price,
    MAX(`price_`) AS max_price
FROM `booktable` 
GROUP BY year_publication;

#5. Змінити п.4, виключивши з статистики книги з ціною від 10 до 20
SELECT 
	COUNT(*) AS total_books,
    YEAR(`date_`) year_publication,
    SUM(`price_`) AS total_price,
    AVG(`price_`) AS average_price,
    MIN(`price_`) AS min_price,
    MAX(`price_`) AS max_price
FROM `booktable` WHERE `price_`
NOT BETWEEN 10 AND 20
GROUP BY year_publication;

#6. Змінити п.4. Відсортувати статистику по спадаючій кількості.
SELECT 
	COUNT(*) AS total_books,
    YEAR(`date_`) year_publication,
    SUM(`price_`) AS total_price,
    AVG(`price_`) AS average_price,
    MIN(`price_`) AS min_price,
    MAX(`price_`) AS max_price
FROM `booktable` WHERE `price_` NOT BETWEEN 10 AND 20 
GROUP BY year_publication
ORDER BY COUNT(*) DESC;

#7. Вивести загальну кількість кодів книг і кодів книг що не повторюються
SELECT
	COUNT(`code_`) AS all_code,
    COUNT(DISTINCT `code_`) AS without_repetition_code
FROM `booktable`;

#8. Вивести статистику: загальна кількість і вартість книг по першій букві її назви
SELECT
	LEFT(`name_`, 1) AS first_letter_of_name,
    COUNT(*) AS count_books,
    SUM(`price_`) AS total_price
FROM `booktable`
first_letter_of_name
GROUP BY first_letter_of_name;
#GROUP BY LEFT(`name_`, 1);
 
#9. Змінити п. 8, виключивши з статистики назви що починаються з англ. букви або з цифри.
SELECT
	LEFT(`name_`, 1) AS first_letter_of_name,
    COUNT(*) AS count_books,
    SUM(`price_`) AS total_price
FROM `booktable` WHERE `name_` NOT REGEXP '^[A-Za-z0-9]'
GROUP BY first_letter_of_name;
#GROUP BY LEFT(`name_`, 1);

#10. Змінити п. 9 так щоб до складу статистики потрапили дані з роками більшими за 2000.
SELECT
	LEFT(`name_`, 1) AS first_letter_of_name,
    COUNT(*) AS count_books,
    SUM(`price_`) AS total_price
FROM `booktable` WHERE `name_` NOT REGEXP '^[A-Za-z0-9]' AND YEAR(`date_`) > 2000
GROUP BY first_letter_of_name;
#GROUP BY LEFT(`name_`, 1);
#або так, якщо малось на увазі позначити книги, що видали після 2000 року.
SELECT
	LEFT(`name_`, 1) AS first_letter_of_name,
    COUNT(*) AS count_books,
    SUM(`price_`) AS total_price,
    IF(YEAR(`date_`) > 2000, YEAR(`date_`), NULL) AS year
FROM `booktable` WHERE `name_` NOT REGEXP '^[A-Za-z0-9]'
GROUP BY first_letter_of_name;
#GROUP BY LEFT(`name_`, 1);

#11. Змінити п. 10. Відсортувати статистику по спадаючій перших букв назви.
SELECT
	LEFT(`name_`, 1) AS first_letter_of_name,
    COUNT(*) AS count_books,
    SUM(`price_`) AS total_price
FROM `booktable` WHERE `name_` NOT REGEXP '^[A-Za-z0-9]' AND YEAR(`date_`) > 2000
GROUP BY first_letter_of_name ORDER BY LEFT(`name_`, 1) DESC;

#для 2-гого випадку рішення п. 10.
SELECT
	LEFT(`name_`, 1) AS first_letter_of_name,
    COUNT(*) AS count_books,
    SUM(`price_`) AS total_price,
    IF(YEAR(`date_`) > 2000, YEAR(`date_`), NULL) AS year
FROM `booktable` WHERE `name_`
NOT REGEXP '^[A-Za-z0-9]'
GROUP BY first_letter_of_name
ORDER BY LEFT(`name_`, 1) DESC;

#12. Вивести статистику (див. 1) по кожному місяцю кожного року.
SELECT 
	COUNT(*) AS total_books,
    DATE_FORMAT(`date_`, '%Y-%m') AS YearMonth,
    SUM(`price_`) AS total_price,
    AVG(`price_`) AS average_price,
    MIN(`price_`) AS min_price,
    MAX(`price_`) AS max_price
FROM `booktable` 
GROUP BY YearMonth;

#13. Змінити п. 12 так щоб до складу статистики не увійшли дані з незаповненими датами.
SELECT 
	COUNT(*) AS total_books,
    DATE_FORMAT(`date_`, '%Y-%m') AS YearMonth,
    SUM(`price_`) AS total_price,
    AVG(`price_`) AS average_price,
    MIN(`price_`) AS min_price,
    MAX(`price_`) AS max_price
FROM `booktable` WHERE `date_` IS NOT NULL
GROUP BY YearMonth;

#14. Змінити п. 12. Фільтр по спадаючій року і зростанню місяця..
SELECT 
	COUNT(*) AS total_books,
    DATE_FORMAT(`date_`, '%Y-%m') AS YearMonth,
    SUM(`price_`) AS total_price,
    AVG(`price_`) AS average_price,
    MIN(`price_`) AS min_price,
    MAX(`price_`) AS max_price
FROM `booktable`
GROUP BY YearMonth
ORDER BY YEAR(`date_`) DESC, MONTH(`date_`) ASC;

#15. Вивести статистику для книг новинка / не новинка: загальна ціна, загальна ціна в грн. / Євро / руб. Колонкам запиту дати назви за змістом.
SELECT
	`novelty_`,
    SUM(`price_`) AS usd,
    SUM(`price_`)*36.41 AS uah,
    SUM(`price_`)*0.93 AS eur,
    SUM(`price_`)* 160 AS 'toilet_paper(rub)'
FROM `booktable`
GROUP BY `novelty_`;

#16. Змінити п. 15 так щоб виводилася округлена до цілого числа (дол. / Грн. / Євро / руб.) Ціна.
SELECT
	`novelty_`,
    ROUND(SUM(`price_`)) AS usd,
    ROUND(SUM(`price_`) * 36.41) AS uah,
    ROUND(SUM(`price_`) * 0.93) AS eur,
    ROUND(SUM(`price_`) * 160) AS 'toilet_paper(rub)'
FROM `booktable`
GROUP BY `novelty_`;

#17. Вивести статистику (див. 1) по видавництвах.
SELECT 
	COUNT(*) AS total_books,
    `publisher_`,
    SUM(`price_`) AS total_price,
    AVG(`price_`) AS average_price,
    MIN(`price_`) AS min_price,
    MAX(`price_`) AS max_price
FROM `booktable`
GROUP BY `publisher_`;

#18. Вивести статистику (див. 1) за темами і видавництвами. Фільтр по видавництвам.
SELECT 
	COUNT(*) AS total_books,
    `subject_`,
    `publisher_`,
    SUM(`price_`) AS total_price,
    AVG(`price_`) AS average_price,
    MIN(`price_`) AS min_price,
    MAX(`price_`) AS max_price
FROM `booktable`
GROUP BY `subject_`, `publisher_`
ORDER BY `publisher_`;

#19. Вивести статистику (див. 1) за категоріями, темами і видавництвами. Фільтр по видавництвам, темах, категоріям.
SELECT 
	COUNT(*) AS total_books,
    `category_`,
    `subject_`,
    `publisher_`,
    SUM(`price_`) AS total_price,
    AVG(`price_`) AS average_price,
    MIN(`price_`) AS min_price,
    MAX(`price_`) AS max_price
FROM `booktable`
GROUP BY `category_`, `subject_`, `publisher_`
ORDER BY `publisher_`,`subject_`, `category_`;

#20. Вивести список видавництв, у яких округлена до цілого ціна однієї сторінки більше 10 копійок.
SELECT 
    `publisher_`, 
    ROUND((SUM(`price_`) / SUM(`pages_`)) * 100, 0) AS price_per_page_in_pennies
FROM `booktable`
GROUP BY `publisher_`
HAVING price_per_page > 10;


	